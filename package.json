{
  "name": "affico2",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "./node_modules/.bin/rimraf dist",
    "build": "./node_modules/.bin/nest build",
    "build-microservices": "nest build affico2-microservices",
    "build-gateway": "nest build affico2-gateway",
    "build-job": "nest build affico2-job",
    "build-ws": "nest build affico2-ws",
    "build-all": "npm run build-microservices && npm run build-gateway && npm run build-job && npm run build-ws",
    "build-activity": "nest build activity-service",
    "build-affiliate": "nest build affiliate-service",
    "build-business-unit:debug": "nest build business-unit-service",
    "build-category": "nest build category-service",
    "build-communication": "nest build communication-service",
    "build-crm": "nest build crm-service",
    "build-file": "nest build file-service",
    "build-group": "nest build group-service",
    "build-ip-address": "nest start build-address-service",
    "build-lead": "nest build lead-service",
    "build-message": "nest build message-service",
    "build-permission": "nest build permission-service",
    "build-person": "nest build person-service",
    "build-psp": "nest build psp-service",
    "build-role": "nest build role-service",
    "build-security": "nest build security-service",
    "build-stats": "nest build stats-service",
    "build-status": "nest build status-service",
    "build-traffic": "nest build traffic-service",
    "build-transfer": "nest build transfer-service",
    "build-user": "nest build user-service",
    "clean-logs": "rm ~/.pm2/logs/*",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "./node_modules/.bin/nest start",
    "start-microservices": "nest start affico2-microservices",
    "start-ws": "nest start affico2-ws",
    "start-job": "nest start affico2-job",
    "start-gateway": "nest start affico2-gateway",
    "start:dev": "./node_modules/.bin/nest start --watch",
    "start:debug": "./node_modules/.bin/nest start --debug --watch",
    "start-local:debug": "nest start --debug --watch",
    "start-microservices:debug": "nest start affico2-microservices --debug --watch",
    "start-gateway:debug": "nest start affico2-gateway --debug --watch",

    "start-gateway-activity:debug": "nest start activity-service-gateway --debug --watch",
    "start-gateway-activity": "nest start activity-service-gateway",
    "start-microservice-activity:debug": "nest start activity-service --debug --watch",
    "start-microservice-activity": "nest start activity-service",

    "start-microservice-affiliate:debug": "nest start affiliate-service --debug --watch",
    "start-microservice-affiliate": "nest start affiliate-service",
    "start-microservice-business-unit:debug": "nest start business-unit-service --debug --watch",
    "start-microservice-business:debug": "nest start business-unit-service",
    "start-microservice-category:debug": "nest start category-service --debug --watch",
    "start-microservice-category": "nest start category-service",
    "start-microservice-communication:debug": "nest start communication-service --debug --watch",
    "start-microservice-communication": "nest start communication-service",
    "start-microservice-crm:debug": "nest start crm-service --debug --watch",
    "start-microservice-crm": "nest start crm-service",
    "start-microservice-file:debug": "nest start file-service --debug --watch",
    "start-microservice-file": "nest start file-service",
    "start-microservice-group:debug": "nest start group-service --debug --watch",
    "start-microservice-group": "nest start group-service",
    "start-microservice-ip-address:debug": "nest start ip-address-service --debug --watch",
    "start-microservice-ip:debug": "nest start ip-address-service",
    "start-microservice-lead:debug": "nest start lead-service --debug --watch",
    "start-microservice-lead": "nest start lead-service",
    "start-microservice-message:debug": "nest start message-service --debug --watch",
    "start-microservice-message": "nest start message-service",
    "start-microservice-permission:debug": "nest start permission-service --debug --watch",
    "start-microservice-permission": "nest start permission-service",
    "start-microservice-person:debug": "nest start person-service --debug --watch",
    "start-microservice-person": "nest start person-service",
    "start-microservice-psp:debug": "nest start psp-service --debug --watch",
    "start-microservice-psp": "nest start psp-service",
    "start-microservice-role:debug": "nest start role-service --debug --watch",
    "start-microservice-role": "nest start role-service",
    "start-microservice-security:debug": "nest start security-service --debug --watch",
    "start-microservice-security": "nest start security-service",
    "start-microservice-stats:debug": "nest start stats-service --debug --watch",
    "start-microservice-stats": "nest start stats-service",
    "start-microservice-status:debug": "nest start status-service --debug --watch",
    "start-microservice-status": "nest start status-service",
    "start-microservice-traffic:debug": "nest start traffic-service --debug --watch",
    "start-microservice-traffic": "nest start traffic-service",
    "start-microservice-transfer:debug": "nest start transfer-service --debug --watch",
    "start-microservice-transfer": "nest start transfer-service",
    "start-microservice-user:debug": "nest start user-service --debug --watch",
    "start-microservice-user": "nest start user-service",
    "reload:pm2-microservices": "npm run build-microservices && cp:pm2 && pm2 reload pm2.config.microservices.js --env prod",
    "reload:pm2-gateway": "npm run build-gateway && cp:pm2 && pm2 reload pm2.config.gateway.js --env prod",
    "reload:pm2-job": "npm run build-job && cp:pm2 && pm2 reload pm2.config.job.js --env prod",
    "reload:pm2-ws": "npm run build-ws && cp:pm2 && pm2 reload pm2.config.ws.js --env prod",
    "restart:pm2": "git pull origin && npm run prebuild && npm run build-microservices && npm run build-gateway && npm run cp:pm2 && pm2 restart pm2.config.gateway.json --env prod && pm2 restart pm2.config.microservices.json --env prod",
    "start:prod": "npm install && npm run start:pm2 && pm2 restart pm2.config.js --env prod",
    "start:fake": "npm install && npm run start:pm2 && pm2 restart pm2.config.js --env fake",
    "start:stage": "npm install && npm npm run start:pm2 && pm2 restart pm2.config.js --env stage",
    "lint": "./node_modules/.bin/eslint \\\"{src,apps,libs,test}/**/*.ts\\\" --fix",
    "test": "./node_modules/.bin/jest",
    "test:watch": "./node_modules/.bin/jest --watch",
    "test:cov": "./node_modules/.bin/jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register ./node_modules/.bin/jest --runInBand",
    "test:e2e": "./node_modules/.bin/jest --config ./apps/affico2/test/jest-e2e.json",
    "cp:pm2": "rsync -avz dist/* dist-pm2/"
  },
  "dependencies": {
    "@casl/ability": "^6.5.0",
    "@nestjs/axios": "^1.0.0",
    "@nestjs/common": "^9.0.0",
    "@nestjs/config": "^2.2.0",
    "@nestjs/core": "^9.0.0",
    "@nestjs/jwt": "^9.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/microservices": "^9.1.6",
    "@nestjs/mongoose": "^9.2.1",
    "@nestjs/passport": "^9.0.0",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/platform-socket.io": "9.1.6",
    "@nestjs/schedule": "^2.2.0",
    "@nestjs/swagger": "^6.1.3",
    "@nestjs/typeorm": "^9.0.1",
    "@nestjs/websockets": "9.1.6",
    "@types/cache-manager-redis-store": "^2.0.1",
    "@vendia/serverless-express": "^4.10.1",
    "amqp-connection-manager": "^4.1.11",
    "amqplib": "^0.10.3",
    "aws-lambda": "^1.0.7",
    "aws-serverless-express": "^3.4.0",
    "axios": "^1.2.0",
    "bcrypt": "^5.1.0",
    "cache-manager": "^5.1.6",
    "cache-manager-redis-store": "^3.0.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "crypto": "^1.0.1",
    "epayco-sdk-node": "^1.2.1",
    "express-basic-auth": "^1.2.1",
    "ioredis": "^5.2.4",
    "mongodb": "^3.6.0",
    "mongoose": "^6.7.0",
    "mongoose-slug-updater": "^3.3.0",
    "otplib": "^12.0.1",
    "passport": "^0.6.0",
    "passport-headerapikey": "^1.2.2",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pg": "^8.8.0",
    "qrcode": "^1.5.1",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "speakeasy": "^2.0.0",
    "typeorm": "^0.3.10",
    "xlsx": "https://cdn.sheetjs.com/xlsx-0.20.2/xlsx-0.20.2.tgz"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@types/aws-lambda": "^8.10.108",
    "@types/bcrypt": "^5.0.0",
    "@types/cron": "^2.0.1",
    "@types/express": "^4.17.13",
    "@types/jest": "28.1.8",
    "@types/node": "^16.0.0",
    "@types/passport-jwt": "^3.0.7",
    "@types/passport-local": "^1.0.34",
    "@types/qrcode": "^1.5.0",
    "@types/speakeasy": "^2.0.7",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "28.1.3",
    "plugin": "^0.3.3",
    "prettier": "^2.3.2",
    "serverless-nest-monorepo": "^1.1.0",
    "serverless-offline": "^11.6.0",
    "serverless-plugin-optimize": "^4.2.1-rc.1",
    "serverless-plugin-typescript": "^2.1.5",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "28.0.8",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.1.0",
    "typescript": "^4.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "^@config/config(|/.*)$": "<rootDir>/config/configuration",
      "^@builder/builders(|/.*)$": "<rootDir>/libs/builders/src/$1",
      "^@common/common(|/.*)$": "<rootDir>/libs/common/src/$1",
      "^@user/user(|/.*)$": "<rootDir>/libs/user/src/$1",
      "^@traffic/traffic(|/.*)$": "<rootDir>/libs/traffic/src/$1",
      "^@status/status(|/.*)$": "<rootDir>/libs/status/src/$1",
      "^@role/role(|/.*)$": "<rootDir>/libs/role/src/$1",
      "^@psp/psp(|/.*)$": "<rootDir>/libs/psp/src/$1",
      "^@person/person(|/.*)$": "<rootDir>/libs/person/src/$1",
      "^@permission/permission(|/.*)$": "<rootDir>/libs/permission/src/$1",
      "^@message/message(|/.*)$": "<rootDir>/libs/message/src/$1",
      "^@psp-account/psp-account(|/.*)$": "<rootDir>/libs/psp-account/src/$1",
      "^@lead/lead(|/.*)$": "<rootDir>/libs/lead/src/$1",
      "^@ip-address/ip-address(|/.*)$": "<rootDir>/libs/ip-address/src/$1",
      "^@group/group(|/.*)$": "<rootDir>/libs/group/src/$1",
      "^@file/file(|/.*)$": "<rootDir>/libs/file/src/$1",
      "^@crm/crm(|/.*)$": "<rootDir>/libs/crm/src/$1",
      "^@category/category(|/.*)$": "<rootDir>/libs/category/src/$1",
      "^@business-unit/business-unit(|/.*)$": "<rootDir>/libs/business-unit/src/$1",
      "^@affiliate/affiliate(|/.*)$": "<rootDir>/libs/affiliate/src/$1",
      "^@activity/activity(|/.*)$": "<rootDir>/libs/activity/src/$1",
      "^@response-affico/response-affico(|/.*)$": "<rootDir>/libs/response-affico/src/$1",
      "^@auth/auth(|/.*)$": "<rootDir>/libs/auth/src/$1",
      "^@integration/integration(|/.*)$": "<rootDir>/libs/integration/src/$1",
      "^@transfer/transfer(|/.*)$": "<rootDir>/libs/transfer/src/$1"
    }
  }
}
